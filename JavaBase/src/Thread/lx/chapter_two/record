
1、Java代码在编译后会变成Java字节码，字节码被类加载器加载到JVM里，JVM执行字节
       码，最终需要转化为汇编指令在CPU上执行，Java中所使用的并发机制依赖于JVM的实现和
  CPU的指令
  
2、valatile的应用
	在多线程并发编程中synchronized和volatile都扮演着重要的角色，volatile是轻量级的
	synchronized，它在多处理器开发中保证了共享变量的“可见性”。可见性的意思是当一个线程
	修改一个共享变量时，另外一个线程能读到这个修改的值。如果volatile变量修饰符使用恰当
	的话，它比synchronized的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。本
	文将深入分析在硬件层面上Intel处理器是如何实现volatile的，通过深入分析帮助我们正确地
	使用volatile变量。

3、 synchronized的应用
	在多线程并发编程中synchronized一直是元老级角色，很多人都会称呼它为重量级锁。但
	是，随着Java SE 1.6对synchronized进行了各种优化之后，有些情况下它就并不那么重了。本文
	详细介绍Java SE 1.6中为了减少获得锁和释放锁带来的性能消耗而引入的偏向锁和轻量级
	锁，以及锁的存储结构和升级过程。